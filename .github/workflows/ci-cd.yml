name: commit and merge control

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - edited

jobs:
  check-commits:
    runs-on: ubuntu-latest

    steps:
      - name: verify commits
        id: commit-check
        run: |
          prefix="^(chore|docs|feat|fix|refactor|style|test):"
          commits=$(git log --oneline ${{ github.event.before }}..${{ github.event.after }} --format='%s')
          for commit in $commits; do
            if ! [[ $commit =~ $prefix ]]; then
              echo "Erro: O commit '$commit' não possui um prefixo válido (feat, chore ou fix)"
              exit 1
            fi
          done

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier
        run: npm run format

      - name: Run Jest Coverage
        run: npm test:cov

      - name: Check Coverage
        run: |
          coverage=$(cat coverage/lcov-report/index.html | grep -oP "Statements<[^>]+>\K\d+")
          if [[ "$coverage" -ne 100 ]]; then
            echo "Erro: A cobertura de testes não atingiu 100%."
            exit 1
          fi

      - name: Run Jest Tests
        run: npm test
  
      - name: Check Jest Test Status
        id: test-status
        run: |
          if [[ "${{ job.status }}" != "success" ]]; then
            echo "Erro: Alguns testes do Jest falharam. O merge não será realizado."
            exit 1
          fi

  merge-to-main:
    runs-on: ubuntu-latest
    needs: check-commits
    steps:
      - name: to aprove pull request
        id: pr-approval
        run: |
          if [[ "${{ github.event.pull_request.merged }}" == "true" || "${{ github.event.pull_request.state }}" != "approved" ]]; then
            echo "Erro: A pull request não foi mesclada ou não foi aprovada."
            exit 1
          fi

      - name: merge on main
        if: ${{ always() || failure() }} && steps.check-commits.outcome == 'success' && steps.pr-approval.outcome == 'success'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git checkout main
          git merge --no-ff ${{ github.event.pull_request.head.ref }}
          git push origin main
